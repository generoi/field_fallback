<?php

/**
 * Implements hook_form_field_ui_field_edit_form_alter().
 */
function field_fallback_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  $field_type = $form['#field']['type'];
  $entity_type = $form['#instance']['entity_type'];
  $bundle = $form['#instance']['bundle'];
  $fallback_fields = array();

  switch ($field_type) {
    // Add the label field as a fallback for text fields.
    case 'text':
      $entity_info = entity_get_info($entity_type);
      $label_key = $entity_info['entity keys']['label'];
      // @todo where can we actually retrieve this label.
      $fallback_fields[$label_key] = $label_key == 'name' ? t('Nmae') : t('Title');
  }

  // Fields of the same field type.
  foreach (field_info_instances($entity_type, $bundle) as $field_name => $instance) {
    // Skip the same field.
    if ($field_name == $form['#field']['field_name']) {
      continue;
    }
    $field = field_info_field($field_name);
    if ($field['type'] == $field_type) {
      $fallback_fields[$instance['field_name']] = $instance['label'];
    }
  }

  if (!empty($fallback_fields)) {
    $form['instance']['fallback_field'] = array(
      '#type' => 'select',
      '#title' => t('Fallback field'),
      '#options' => array('') + $fallback_fields,
      '#description' => t('If no value is set and no other default is used the value from this field will be used when the entity is rendered.'),
      '#default_value' => isset($form['#instance']['fallback_field']) ? $form['#instance']['fallback_field'] : '',
    );
  }
}

/**
 * Implements hook_entity_prepare_view().
 */
function field_fallback_entity_prepare_view($entities, $type, $langcode) {
  $entity_info = entity_get_info($type);

  foreach ($entities as $entity) {
    list(,,$bundle) = entity_extract_ids($type, $entity);
    foreach (field_info_instances($type, $bundle) as $field_name => $instance) {
      // Skip fields which has a value
      if (!empty($entity->{$field_name})) {
        continue;
      }
      if (!empty($instance['fallback_field'])) {
        $field_info = field_info_field($field_name);
        $fallback_field = $entity->{$instance['fallback_field']};

        // Fallback field is the label, wrap it as a textfield.
        if ($field_info['type'] == 'text' && $entity_info['entity keys']['label'] == $instance['fallback_field']) {
          $language = field_language($type, $entity, $field_name, $langcode);
          $fallback_field = array();
          $fallback_field[$language][] = array(
            'value' => $entity->{$instance['fallback_field']},
            'format' => NULL,
            'safe_value' => $entity->{$instance['fallback_field']},
          );
        }

        $entity->{$field_name} = $fallback_field;
      }
    }
  }
}
